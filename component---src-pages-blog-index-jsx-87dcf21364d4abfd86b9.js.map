{"version":3,"sources":["webpack:///./src/track/index.js","webpack:///./src/components/PostCard/index.jsx","webpack:///./src/pages/blog/index.jsx","webpack:///./src/components/PostCard/postCard.module.less"],"names":["trackBlog","path","trackCustomEvent","category","action","value","trackTag","PostCard","props","data","node","frontmatter","hot","recommended","isTranslated","title","_title","excerpt","tags","date","totalCount","showHot","showRecommended","contentUrl","Utils","resolvePageUrl","label_viewed","formatNumber","className","style","postCard","onClick","to","postCardImg","backgroundImage","cover","childImageSharp","fluid","src","backgroundPositionX","mrTp20","tips","dateHolder","moment","format","marginRight","map","tag","key","Blog","description","gutter","allMarkdownRemark","edges","filter","edge","some","t","indexOf","val","xs","sm","md","lg","module","exports"],"mappings":"8FAAA,oFAEO,MAAMA,EAAYC,IACvBC,2BAAiB,CAEfC,SAAU,OAEVC,OAAQ,QAERC,MAAOJ,KAIEK,EAAWL,IACtBC,2BAAiB,CACfC,SAAU,MACVC,OAAQ,QACRC,MAAOJ,M,kCCjBX,4HAwEeM,IAhEEC,IACf,MACEC,MACEC,MAAM,YAAEC,EAAc,MAEtBH,GAEE,IACJI,GAAM,EADF,YAEJC,GAAc,EAFV,aAGJC,GAAe,EACfC,MAAOC,EAJH,QAKJC,EAAU,GALN,KAMJC,EAAO,GANH,KAOJC,EAAO,GAPH,KAQJlB,EARI,WASJmB,GACET,EAEEU,IAAYT,EACZU,GAAmBD,GAAWR,EAE9BE,EAAQD,EAAgB,OAAME,EAAWA,EACzCO,EAAaC,IAAMC,eAAexB,GAClCyB,EAAkBC,YAAaP,GAAf,IAEtB,OACE,yBAAKQ,UAAWC,IAAMC,SAAUC,QAAS,IAAM/B,YAAUuB,IACvD,kBAAC,OAAD,CAAMS,GAAIT,GACR,yBACEK,UAAWC,IAAMI,YACjBJ,MAAO,CACLK,gBAAiBvB,EACZ,OAAMA,EAAYwB,MAAMC,gBAAgBC,MAAMC,OAC9C,UACLC,oBAAqB,aAI3B,yBAAKX,UAAWC,IAAMW,QACpB,kBAAC,OAAD,CAAMR,GAAIT,GACR,uBAAGK,UAAWC,IAAMY,MAClB,0BAAMb,UAAWC,IAAMa,YAAaC,IAAOxB,GAAMyB,OAAO,gBACxD,0BAAMhB,UAAWC,IAAMT,YAAaM,IAEtC,4BACGL,GAAW,0BAAMQ,MAAO,CAAEgB,YAAa,QAA5B,MACXvB,GAAmB,0BAAMO,MAAO,CAAEgB,YAAa,QAA5B,MACnB9B,GAEH,2BAAIE,IAEN,2BACGC,EAAK4B,IAAIC,GACR,kBAAC,OAAD,CAAMf,GAAIR,IAAMC,eAAgB,QAAOsB,GAAQC,IAAKD,GAClD,0BAAMnB,UAAWC,IAAMkB,KAAvB,IAA8BA,U,0LCS7BE,UAhEF,EAAGxC,UAEZ,uBAAQmB,UAAU,gBAChB,uBAAQA,UAAU,aAChB,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKb,MAAM,KAAKmC,YAAY,SAASjD,KAAK,SAC1C,kBAAC,IAAD,KACE,yBAAK2B,UAAU,kBACb,wBAAIA,UAAU,iBAAd,OAEF,uBAAKuB,OAAQ,CAAC,GAAI,KACf1C,EAAK2C,mBACJ3C,EAAK2C,kBAAkBC,MACpBC,OAAOC,IACN,MAAM,KAAErC,EAAF,KAAQjB,GAASsD,EAAK7C,KAAKC,YACjC,OACGO,EAAKsC,KAAKC,GAAW,QAANA,IACuB,IAAvCxD,EAAKyD,QAAQ,wBAGhBZ,IAAI,CAACa,EAAKX,IACT,uBAAKA,IAAKA,EAAKY,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACzC,kBAAC,IAAD,CAAUtD,KAAMkD,W,qBC7BpCK,EAAOC,QAAU,CAAC,SAAW,mCAAmC,YAAc,sCAAsC,OAAS,iCAAiC,KAAO,+BAA+B,WAAa,qCAAqC,WAAa,qCAAqC,IAAM","file":"component---src-pages-blog-index-jsx-87dcf21364d4abfd86b9.js","sourcesContent":["import { trackCustomEvent } from 'gatsby-plugin-google-analytics';\n//TODO: ÂÇªÈÄº‰∫ÜÔºågoogleÈáåËøòÊ≤°ËÆæÁΩÆÁôΩÂêçÂçïÂë¢Ôºåtrack‰∏™Â±ÅÂëÄ...\nexport const trackBlog = path => {\n  trackCustomEvent({\n    // string - required - The object that was interacted with (e.g.video)\n    category: 'blog',\n    // string - required - Type of interaction (e.g. 'play')\n    action: 'Click',\n    // number - optional - Numeric value associated with the event. (e.g. A product ID)\n    value: path,\n  });\n};\n\nexport const trackTag = path => {\n  trackCustomEvent({\n    category: 'tag',\n    action: 'Click',\n    value: path,\n  });\n};\n","import React from 'react';\nimport moment from 'moment';\nimport { Link } from 'gatsby';\nimport Utils from '../../utils/pageUtils';\nimport { formatNumber } from '../../utils/tools';\nimport { trackBlog } from '../../track';\nimport style from './postCard.module.less';\n\nconst PostCard = props => {\n  const {\n    data: {\n      node: { frontmatter = {} },\n    },\n  } = props;\n\n  const {\n    hot = false,\n    recommended = false,\n    isTranslated = false,\n    title: _title,\n    excerpt = '',\n    tags = [],\n    date = '',\n    path,\n    totalCount,\n  } = frontmatter;\n\n  const showHot = !!hot;\n  const showRecommended = !showHot && recommended;\n\n  const title = isTranslated ? `[ËØë] ${_title}` : _title;\n  const contentUrl = Utils.resolvePageUrl(path);\n  const label_viewed = `${formatNumber(totalCount)}ÈòÖ`;\n\n  return (\n    <div className={style.postCard} onClick={() => trackBlog(contentUrl)}>\n      <Link to={contentUrl}>\n        <div\n          className={style.postCardImg}\n          style={{\n            backgroundImage: frontmatter\n              ? `url(${frontmatter.cover.childImageSharp.fluid.src})`\n              : `url('')`,\n            backgroundPositionX: 'center',\n          }}\n        />\n      </Link>\n      <div className={style.mrTp20}>\n        <Link to={contentUrl}>\n          <p className={style.tips}>\n            <span className={style.dateHolder}>{moment(date).format('MMM Do YYYY')}</span>\n            <span className={style.totalCount}>{label_viewed}</span>\n          </p>\n          <h3>\n            {showHot && <span style={{ marginRight: '4px' }}>üî•</span>}\n            {showRecommended && <span style={{ marginRight: '4px' }}>üëç</span>}\n            {title}\n          </h3>\n          <p>{excerpt}</p>\n        </Link>\n        <p>\n          {tags.map(tag => (\n            <Link to={Utils.resolvePageUrl(`tags/${tag}`)} key={tag}>\n              <span className={style.tag}>#{tag}</span>\n            </Link>\n          ))}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default PostCard;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport { Layout, Row, Col } from 'antd';\nimport Header from '../../components/PageLayout/Header';\nimport SidebarWrapper from '../../components/PageLayout/Sidebar';\nimport PostCard from '../../components/PostCard';\nimport SEO from '../../components/Seo';\n\nconst Blog = ({ data }) => {\n  return (\n    <Layout className=\"outerPadding\">\n      <Layout className=\"container\">\n        <Header />\n        <SEO title=\"ËøΩË∞è\" description=\"ËøΩË∞èÂçöÂÆ¢ÂàóË°®\" path=\"blog\" />\n        <SidebarWrapper>\n          <div className=\"marginTopTitle\">\n            <h1 className=\"titleSeparate\">ÂçöÊñá</h1>\n          </div>\n          <Row gutter={[20, 20]}>\n            {data.allMarkdownRemark &&\n              data.allMarkdownRemark.edges\n                .filter(edge => {\n                  const { tags, path } = edge.node.frontmatter;\n                  return (\n                    !tags.some(t => t === 'ÈÖùÈÖøÊ±†') && // ËøáÊª§ÈÖùÈÖøÊ±†ÁöÑÂÜÖÂÆπ\n                    path.indexOf('blog/past-versions') !== 0 // ËøáÊª§ÂéÜÂè≤ÁâàÊú¨ÂÜÖÂÆπ\n                  );\n                })\n                .map((val, key) => (\n                  <Col key={key} xs={24} sm={24} md={12} lg={8}>\n                    <PostCard data={val} />\n                  </Col>\n                ))}\n          </Row>\n        </SidebarWrapper>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fileAbsolutePath: { regex: \"/index.md$/\" } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            date\n            path\n            title\n            tags\n            excerpt\n            hot\n            recommended\n            isTranslated\n            totalCount\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 288) {\n                  ...GatsbyImageSharpFluid_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Blog;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postCard\":\"postCard-module--postCard--3vov_\",\"postCardImg\":\"postCard-module--postCardImg--yRYws\",\"mrTp20\":\"postCard-module--mrTp20--31jVy\",\"tips\":\"postCard-module--tips--2fTFF\",\"dateHolder\":\"postCard-module--dateHolder--k3h7B\",\"totalCount\":\"postCard-module--totalCount--2O7KS\",\"tag\":\"postCard-module--tag--3_3-1\"};"],"sourceRoot":""}