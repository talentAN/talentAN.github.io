{"version":3,"sources":["webpack:///./src/templates/post/post.module.less","webpack:///./src/components/Comment/index.jsx","webpack:///./src/templates/post/post.jsx"],"names":["module","exports","Comments","React","Component","componentDidMount","pageCanonicalUrl","pageId","this","props","window","DISQUS","reset","reload","config","page","url","identifier","disqus_config","d","document","s","createElement","src","Config","disqusScript","setAttribute","Date","head","body","appendChild","render","id","Post","data","html","frontmatter","markdownRemark","title","cover","childImageSharp","fluid","excerpt","path","canonicalUrl","Utils","resolvePageUrl","siteUrl","pathPrefix","className","description","Header","Sidebar","style","bannerImgContainer","bannerImg","alt","blogArticle","dangerouslySetInnerHTML","__html","Comment","background","borderRadius","padding","display","justifyContent","alignItems","size","icon","marginRight","color","fontStyle","fontWeight"],"mappings":"wGACAA,EAAOC,QAAU,CAAC,mBAAqB,yCAAyC,UAAY,gCAAgC,YAAc,oC,2LCK1I,MAAMC,UAAiBC,IAAMC,UAC3BC,oBACE,MAAM,iBAAEC,EAAF,OAAoBC,GAAWC,KAAKC,MAEtCC,OAAOC,OACTD,OAAOC,OAAOC,MAAM,CAClBC,QAAQ,EACRC,SACEN,KAAKO,KAAKC,IAAMV,EAChBE,KAAKO,KAAKE,WAAaV,MAI3BG,OAAOQ,cAAgB,KACrBV,KAAKO,KAAKC,IAAMV,EAChBE,KAAKO,KAAKE,WAAaV,GAEzB,WAEE,MAAMY,EAAIC,SACJC,EAAIF,EAAEG,cAAc,UAC1BD,EAAEE,IAAMC,IAAOC,aACfJ,EAAEK,aAAa,kBAAmB,IAAIC,OACrCR,EAAES,MAAQT,EAAEU,MAAMC,YAAYT,GANjC,IAWJU,SACE,OACE,6BACE,yBAAKC,GAAG,oBAMD9B,Q,gECsEA+B,UAjGF,EAAGC,WACd,MAAM,KAAEC,EAAF,YAAQC,GAAgBF,EAAKG,gBAC7B,MACJC,EACAC,OACEC,iBAAiB,MAAEC,IAHjB,QAKJC,EALI,KAMJC,GACEP,EACEQ,EAAeC,IAAMC,eAAetB,IAAOuB,QAASvB,IAAOwB,WAAYL,GAC7E,OACE,uBAAQM,UAAU,gBAChB,uBAAQA,UAAU,aAChB,kBAAC,IAAD,CAAKX,MAAOA,EAAOY,YAAaR,EAASC,KAAMA,IAC/C,kBAACQ,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACE,yBAAKH,UAAU,kBACb,4BAAKX,GACL,yBAAKW,UAAWI,IAAMC,oBACpB,kBAAC,IAAD,CAAKL,UAAWI,IAAME,UAAWd,MAAOA,EAAOH,MAAOI,EAASc,IAAKlB,KAEtE,6BAASW,UAAWI,IAAMI,YAAaC,wBAAyB,CAAEC,OAAQxB,KAC1E,kBAACyB,EAAD,CAAStD,iBAAkBsC,EAAcrC,OAAQ+B,IACjD,yBACEe,MAAO,CACLQ,WAAY,OACZC,aAAc,MACdC,QAAS,MACTC,QAAS,OACTC,eAAgB,QAChBC,WAAY,WAGd,kBAAC,IAAD,CACEC,KAAK,KACLC,KAAK,iBACLf,MAAO,CAAEgB,YAAa,MAAOC,MAAO,aAEtC,0BAAMjB,MAAO,CAAEkB,UAAW,SAAUC,WAAY,OAAQF,MAAO,SAA/D,qC","file":"component---src-templates-post-post-jsx-b30c57c261b262cc6885.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bannerImgContainer\":\"post-module--bannerImgContainer--3SopW\",\"bannerImg\":\"post-module--bannerImg--2yAgf\",\"blogArticle\":\"post-module--blogArticle--1Ro02\"};","/* eslint-disable func-names */\n/* Vendor imports */\nimport React from 'react';\n/* App imports */\nimport Config from '../../../config';\n\nclass Comments extends React.Component {\n  componentDidMount() {\n    const { pageCanonicalUrl, pageId } = this.props;\n\n    if (window.DISQUS) {\n      window.DISQUS.reset({\n        reload: true,\n        config() {\n          this.page.url = pageCanonicalUrl;\n          this.page.identifier = pageId;\n        },\n      });\n    } else {\n      window.disqus_config = () => {\n        this.page.url = pageCanonicalUrl;\n        this.page.identifier = pageId;\n      };\n      (function () {\n        // eslint-disable-next-line no-undef\n        const d = document;\n        const s = d.createElement('script');\n        s.src = Config.disqusScript;\n        s.setAttribute('data-timestamp', +new Date());\n        (d.head || d.body).appendChild(s);\n      })();\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <div id=\"disqus_thread\" />\n      </div>\n    );\n  }\n}\n\nexport default Comments;\n","import React from 'react';\nimport { Layout } from 'antd';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport FeatherIcon from 'feather-icons-react';\nimport Header from '../../components/PageLayout/Header';\nimport SidebarWrapper from '../../components/PageLayout/Sidebar';\nimport SEO from '../../components/Seo';\nimport Comment from '../../components/Comment';\nimport Config from '../../../config';\nimport Utils from '../../utils/pageUtils';\n\nimport 'prismjs/themes/prism-solarizedlight.css';\nimport './highlight-syntax.less';\nimport style from './post.module.less';\n\nconst Post = ({ data }) => {\n  const { html, frontmatter } = data.markdownRemark;\n  const {\n    title,\n    cover: {\n      childImageSharp: { fluid },\n    },\n    excerpt,\n    path,\n  } = frontmatter;\n  const canonicalUrl = Utils.resolvePageUrl(Config.siteUrl, Config.pathPrefix, path);\n  return (\n    <Layout className=\"outerPadding\">\n      <Layout className=\"container\">\n        <SEO title={title} description={excerpt} path={path} />\n        <Header />\n        <SidebarWrapper>\n          <div className=\"marginTopTitle\">\n            <h1>{title}</h1>\n            <div className={style.bannerImgContainer}>\n              <Img className={style.bannerImg} fluid={fluid} title={excerpt} alt={title} />\n            </div>\n            <article className={style.blogArticle} dangerouslySetInnerHTML={{ __html: html }} />\n            <Comment pageCanonicalUrl={canonicalUrl} pageId={title} />\n            <div\n              style={{\n                background: '#eee',\n                borderRadius: '8px',\n                padding: '4px',\n                display: 'flex',\n                justifyContent: 'start',\n                alignItems: 'center',\n              }}\n            >\n              <FeatherIcon\n                size=\"19\"\n                icon=\"alert-triangle\"\n                style={{ marginRight: '8px', color: '#fa8c16' }}\n              />\n              <span style={{ fontStyle: 'italic', fontWeight: 'bold', color: '#333' }}>\n                转载请注明作者、出处及相关链接，否则追究其法律责任！\n              </span>\n            </div>\n          </div>\n        </SidebarWrapper>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query($postPath: String!) {\n    markdownRemark(frontmatter: { path: { eq: $postPath } }) {\n      html\n      timeToRead\n      frontmatter {\n        title\n        date(formatString: \"DD MMM YYYY\")\n        tags\n        path\n        excerpt\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 1000) {\n              ...GatsbyImageSharpFluid_tracedSVG\n            }\n          }\n        }\n      }\n    }\n    allMarkdownRemark(\n      filter: {\n        frontmatter: { path: { ne: $postPath } }\n        fileAbsolutePath: { regex: \"/index.md$/\" }\n      }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            path\n            title\n            tags\n            excerpt\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Post;\n"],"sourceRoot":""}