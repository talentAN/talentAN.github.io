{"version":3,"file":"component---src-templates-tags-index-jsx-95301fb333b67eb69306.js","mappings":"wOAyDA,MAlDiBA,IACf,MACEC,MACEC,MAAM,YAAEC,EAAc,CAAC,KAEvBH,GAEE,QAAEI,EAAU,GAAE,KAAEC,EAAO,GAAE,KAAEC,EAAO,IAAOH,GAEzC,MAAEI,EAAK,WAAEC,EAAU,aAAEC,IAAiBC,EAAAA,EAAAA,IAAgBP,GAE5D,OACEQ,EAAAA,cAAA,OAAKC,UChBa,oCDiBhBD,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAIN,GACRG,EAAAA,cAAA,OACEC,UClBe,sCDmBfG,MAAO,CACLC,gBAAiBb,EACZ,OAAMA,EAAYc,MAAMC,gBAAgBC,MAAMC,OAC9C,UACLC,oBAAqB,aAI3BV,EAAAA,cAAA,OAAKC,UC7BS,kCD8BZD,EAAAA,cAACE,EAAAA,KAAI,CAACC,GAAIN,GACRG,EAAAA,cAAA,KAAGC,UC3BK,gCD4BND,EAAAA,cAAA,QAAMC,UCjCM,sCDiCwBU,IAAOhB,GAAMiB,OAAO,gBACxDZ,EAAAA,cAAA,QAAMC,UC5BM,sCD4BwBH,IAEtCE,EAAAA,cAAA,UAAKJ,GACLI,EAAAA,cAAA,SAAIP,IAENO,EAAAA,cAAA,SACGN,EAAKmB,KAAIC,GACRd,EAAAA,cAACE,EAAAA,KAAI,CACHC,GAAIY,IAAAA,eACD,QAAe,aAARD,EAAqB,wCAA0CA,KAEzEE,IAAKF,GAELd,EAAAA,cAAA,QAAMC,UC3CH,+BD2CyB,IAAEa,QAKlC,C,kOE0CV,MAjFgBG,EAAG3B,OAAM4B,kBACvB,MAAM,IAAEJ,GAAQI,EACVC,EAAUC,IAAAA,KAAYN,GAAKO,MAAQN,IAAAA,WAAiBD,GACpDQ,EAAcF,IAAAA,MAAaN,IAC3BS,EAAWjC,EAAKkC,QAAQC,MAAMC,MAAKC,GAAQA,EAAKpC,KAAK8B,OAASP,IAAKvB,KAAKgB,gBAC3EC,MACGoB,EAAQtC,EAAKuC,kBAAkBJ,MACrC,OACEzB,EAAAA,cAAA8B,EAAAA,QAAA,CAAQ7B,UAAU,gBAChBD,EAAAA,cAAA8B,EAAAA,QAAA,CAAQ7B,UAAU,aAChBD,EAAAA,cAAC+B,EAAAA,EAAM,MACP/B,EAAAA,cAACgC,EAAAA,EAAG,CACFpC,MAAOuB,EACPc,YAAc,KAAId,MAAYC,IAAAA,KAAYN,GAAKmB,mBAC/CC,KAAMnB,IAAAA,eAAqBO,EAAaR,GACxCqB,SAAU,CAAChB,KAEbnB,EAAAA,cAACoC,EAAAA,EAAc,KACbpC,EAAAA,cAAA,OAAKC,UAAY,+CACfD,EAAAA,cAAA,UAAI,IAAEmB,GACNnB,EAAAA,cAAA,OAAKC,UChCe,0CDiClBD,EAAAA,cAACqC,EAAAA,EAAG,CAACpC,UClCI,gCDkCwBO,MAAOe,EAAUe,IAAKnB,KAEzDnB,EAAAA,cAAA,MAAIC,UAAU,cAAcmB,IAAAA,KAAYN,GAAKmB,cAE/CjC,EAAAA,cAAAuC,EAAAA,EAAA,CAAKC,OAAQ,CAAC,GAAI,KACfZ,EAAMf,KAAI,CAAC4B,EAAMzB,IAChBhB,EAAAA,cAAA0C,EAAAA,EAAA,CAAK1B,IAAKA,EAAK2B,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACzC9C,EAAAA,cAAC+C,EAAAA,EAAQ,CAACzD,KAAMmD,UAMnB,C,iHE7Cb,MAAMO,EAAUC,KAAKC,IAAI,GAAG,GACtBC,EAAUF,KAAKC,IAAI,GAAG,GACfE,EAAeC,IAC1B,GAAGA,EAAML,EACP,MAAQ,GAAEM,OAAOD,EAAML,GAASO,QAAQ,MAE1C,GAAGF,EAAMF,EACP,MAAQ,GAAEG,OAAOD,EAAMF,GAAUI,QAAQ,MAE3C,IAAIC,EAAMP,KAAKQ,MAAMJ,KAASA,EAAMA,EAAIK,WAAaJ,OAAOD,GAAKE,QAAQ,GAAGG,WACxEC,EAAMH,EAAII,QAAQ,MAAQ,EAAI,sBAAwB,uBAC1D,OAAOJ,EAAIK,QAAQF,EAAK,MAAM,EAcnB5D,EAAkBP,IAC7B,MAAM,IACJsE,GAAM,EAAK,YACXC,GAAc,EAAK,aACnBC,GAAe,EACfpE,MAAOqE,EAAM,KACb/B,EAAI,WACJgC,GACE1E,EAEE2E,IAAYL,EACZM,GAAmBD,GAAWJ,EACpC,IAAInE,EAAQqE,EACRD,IACFpE,EAAS,OAAMqE,KAEbE,IACFvE,EACEI,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,QAAMI,MAAO,CAAEiE,YAAa,QAAS,MACpCzE,IAIHwE,IACFxE,EACEI,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,QAAMI,MAAO,CAAEiE,YAAa,QAAS,MACpCzE,IAOP,MAAO,CACLA,QACAC,WALiBkB,IAAAA,eAAqBmB,GAMtCpC,aALoB,GAAEsD,EAAac,MAMpC,C","sources":["webpack://talentan_gatsby_blog/./src/components/PostCard/index.jsx","webpack://talentan_gatsby_blog/./src/components/PostCard/postCard.module.less","webpack://talentan_gatsby_blog/./src/templates/tags/index.jsx","webpack://talentan_gatsby_blog/./src/templates/tags/tags.module.less","webpack://talentan_gatsby_blog/./src/utils/tools.js"],"sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport { Link } from 'gatsby';\nimport Utils from '../../utils/pageUtils';\nimport { getPostSubtract } from '../../utils/tools';\nimport * as style from './postCard.module.less';\n\nconst PostCard = props => {\n  const {\n    data: {\n      node: { frontmatter = {} },\n    },\n  } = props;\n\n  const { excerpt = '', tags = [], date = '' } = frontmatter;\n\n  const { title, contentUrl, label_viewed } = getPostSubtract(frontmatter);\n\n  return (\n    <div className={style.postCard}>\n      <Link to={contentUrl}>\n        <div\n          className={style.postCardImg}\n          style={{\n            backgroundImage: frontmatter\n              ? `url(${frontmatter.cover.childImageSharp.fluid.src})`\n              : `url('')`,\n            backgroundPositionX: 'center',\n          }}\n        />\n      </Link>\n      <div className={style.mrTp20}>\n        <Link to={contentUrl}>\n          <p className={style.tips}>\n            <span className={style.dateHolder}>{moment(date).format('MMM Do YYYY')}</span>\n            <span className={style.totalCount}>{label_viewed}</span>\n          </p>\n          <h3>{title}</h3>\n          <p>{excerpt}</p>\n        </Link>\n        <p>\n          {tags.map(tag => (\n            <Link\n              to={Utils.resolvePageUrl(\n                `tags/${tag === 'ËÅ™Êòé‰∫∫ÁöÑ‰∏™‰∫∫ÊàêÈïø' ? 'Personal Development for Smart People' : tag}`\n              )}\n              key={tag}\n            >\n              <span className={style.tag}>#{tag}</span>\n            </Link>\n          ))}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default PostCard;\n","// extracted by mini-css-extract-plugin\nexport var dateHolder = \"postCard-module--dateHolder--4244f\";\nexport var mrTp20 = \"postCard-module--mrTp20--18b15\";\nexport var postCard = \"postCard-module--postCard--cb51b\";\nexport var postCardImg = \"postCard-module--postCardImg--d2f99\";\nexport var tag = \"postCard-module--tag--2983c\";\nexport var tips = \"postCard-module--tips--89c6e\";\nexport var totalCount = \"postCard-module--totalCount--5c7fb\";","/* Vendor imports */\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport Img from 'gatsby-image';\nimport { Layout, Row, Col } from 'antd';\n/* App imports */\nimport SEO from '../../components/Seo';\nimport Header from '../../components/PageLayout/Header';\nimport PostCard from '../../components/PostCard';\nimport SidebarWrapper from '../../components/PageLayout/Sidebar';\nimport Config from '../../../config';\nimport Utils from '../../utils/pageUtils';\nimport * as style from './tags.module.less';\n\nconst TagPage = ({ data, pageContext }) => {\n  const { tag } = pageContext;\n  const tagName = Config.tags[tag].name || Utils.capitalize(tag);\n  const tagPagePath = Config.pages.tag;\n  const tagImage = data.allFile.edges.find(edge => edge.node.name === tag).node.childImageSharp\n    .fluid;\n  const posts = data.allMarkdownRemark.edges;\n  return (\n    <Layout className=\"outerPadding\">\n      <Layout className=\"container\">\n        <Header />\n        <SEO\n          title={tagName}\n          description={`ÂÖ≥‰∫é${tagName}. ${Config.tags[tag].description}ÁöÑÊâÄÊúâÂçöÂÆ¢`}\n          path={Utils.resolvePageUrl(tagPagePath, tag)}\n          keywords={[tagName]}\n        />\n        <SidebarWrapper>\n          <div className={`marginTopTitle ${style.tagsList}`}>\n            <h1>#{tagName}</h1>\n            <div className={style.bannerImgContainer}>\n              <Img className={style.bannerImg} fluid={tagImage} alt={tagName} />\n            </div>\n            <h4 className=\"textCenter\">{Config.tags[tag].description}</h4>\n          </div>\n          <Row gutter={[20, 20]}>\n            {posts.map((post, key) => (\n              <Col key={key} xs={24} sm={24} md={12} lg={8}>\n                <PostCard data={post} />\n              </Col>\n            ))}\n          </Row>\n        </SidebarWrapper>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport const pageQuery = graphql`\n  query ($tag: String!) {\n    allMarkdownRemark(\n      filter: { frontmatter: { tags: { in: [$tag] } }, fileAbsolutePath: { regex: \"/index.md$/\" } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            tags\n            excerpt\n            isTranslated\n            keywords\n            totalCount\n            cover {\n              childImageSharp {\n                fluid(maxWidth: 600) {\n                  ...GatsbyImageSharpFluid_tracedSVG\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    allFile(filter: { name: { eq: $tag }, dir: { regex: \"/tags$/\" } }) {\n      edges {\n        node {\n          name\n          childImageSharp {\n            fluid(maxHeight: 600) {\n              ...GatsbyImageSharpFluid_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default TagPage;\n","// extracted by mini-css-extract-plugin\nexport var bannerImg = \"tags-module--bannerImg--94b1c\";\nexport var bannerImgContainer = \"tags-module--bannerImgContainer--9c71c\";\nexport var tagsList = \"tags-module--tagsList--080ef\";","import React from 'react';\nimport Utils from './pageUtils';\n\nconst million = Math.pow(10,6);\nconst thousand= Math.pow(10,3);\nexport const formatNumber = num => {\n  if(num > million){\n    return `${Number(num / million).toFixed(2)}M`\n  }\n  if(num > thousand){\n    return `${Number(num / thousand).toFixed(2)}K`\n  }\n  var str = Math.floor(num) === num ? num.toString() : Number(num).toFixed(2).toString();\n  var reg = str.indexOf('.') > -1 ? /(\\d)(?=(\\d{3})+\\.)/g : /(\\d)(?=(?:\\d{3})+$)/g;\n  return str.replace(reg, '$1,');\n};\n\nexport const parseQuery = () => {\n  let query = location.search.substr(1);\n  let queryObj = {};\n  query.split('&').forEach(item => {\n    let [key, value] = item.split('=');\n    queryObj[key] = value;\n  });\n  return queryObj;\n};\n\n// Ëé∑ÂèñÂçöÂÆ¢Âç°ÁâáÁöÑÂ±ïÁ§∫‰ø°ÊÅØ\nexport const getPostSubtract = frontmatter => {\n  const {\n    hot = false, // ÁÉ≠Èó®\n    recommended = false,\n    isTranslated = false,\n    title: _title,\n    path,\n    totalCount,\n  } = frontmatter;\n\n  const showHot = !!hot;\n  const showRecommended = !showHot && recommended;\n  let title = _title;\n  if (isTranslated) {\n    title = `[ËØë] ${_title}`;\n  }\n  if (showHot) {\n    title = (\n      <>\n        <span style={{ marginRight: '4px' }}>üî•</span>\n        {title}\n      </>\n    );\n  }\n  if (showRecommended) {\n    title = (\n      <>\n        <span style={{ marginRight: '4px' }}>üëç</span>\n        {title}\n      </>\n    );\n  }\n  const contentUrl = Utils.resolvePageUrl(path);\n  const label_viewed = `${formatNumber(totalCount)}ÈòÖ`;\n\n  return {\n    title,\n    contentUrl,\n    label_viewed,\n  };\n};\n"],"names":["props","data","node","frontmatter","excerpt","tags","date","title","contentUrl","label_viewed","getPostSubtract","React","className","Link","to","style","backgroundImage","cover","childImageSharp","fluid","src","backgroundPositionX","moment","format","map","tag","Utils","key","TagPage","pageContext","tagName","Config","name","tagPagePath","tagImage","allFile","edges","find","edge","posts","allMarkdownRemark","_Layout","Header","SEO","description","path","keywords","SidebarWrapper","Img","alt","_Row","gutter","post","_Col","xs","sm","md","lg","PostCard","million","Math","pow","thousand","formatNumber","num","Number","toFixed","str","floor","toString","reg","indexOf","replace","hot","recommended","isTranslated","_title","totalCount","showHot","showRecommended","marginRight"],"sourceRoot":""}