{"version":3,"file":"component---src-pages-tags-index-jsx-0b8e0075b5644f1956d9.js","mappings":"kUAEWA,EAAU,8BCkCrB,MA9BgBC,IACd,MAAM,IAAEC,EAAG,KAAEC,EAAI,YAAEC,EAAW,MAAEC,GAAUJ,EACpCK,EAAUC,IAAAA,MAAaC,IAE7B,OACEC,EAAAA,cAACC,EAAAA,KAAI,CACHC,UAAWC,EACXC,GAAIC,IAAAA,eACFR,EACS,aAATH,EAAsB,wCAA0CA,IAGlEM,EAAAA,cAAA,OAAKE,UAAWC,GACdH,EAAAA,cAAA,OACEE,UDjBU,6BCkBVC,MAAO,CACLG,gBAAkB,OAAMb,QAG5BO,EAAAA,cAAA,OAAKE,UDxBO,8BCyBVF,EAAAA,cAAA,OAAKE,UAAU,cACbF,EAAAA,cAAA,MAAIG,MAAO,CAAEP,UAAS,IAAEF,IAE1BM,EAAAA,cAAA,SAAIL,KAGH,ECyCX,MAhEaY,EAAGC,WACd,MACEC,SAAS,MAAEC,IACTF,EACEG,EAAUb,IAAAA,KAEVc,EAASC,OAAOC,KAAKH,GAASI,KAAIhB,GAC/BW,EAAMM,MAAKC,GAAKA,EAAEC,KAAKxB,OAASK,MAEzC,OACEC,EAAAA,cAAAmB,EAAAA,QAAA,CAAQjB,UAAU,gBAChBF,EAAAA,cAAAmB,EAAAA,QAAA,CAAQjB,UAAU,aAChBF,EAAAA,cAACoB,EAAAA,EAAM,MACPpB,EAAAA,cAACqB,EAAAA,EAAG,CAACC,MAAM,KAAK3B,YAAY,WAAW4B,KAAK,SAC5CvB,EAAAA,cAACwB,EAAAA,EAAc,KACbxB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,OAAKE,UAAU,kBACbF,EAAAA,cAAA,MAAIE,UAAU,iBAAgB,QAEhCF,EAAAA,cAAAyB,EAAAA,EAAA,CAAKC,OAAQ,CAAC,GAAI,KACfd,EAAOG,KAAIY,GACV3B,EAAAA,cAAA4B,EAAAA,EAAA,CAAKC,IAAKF,EAAIT,KAAKxB,KAAMoC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GACnDjC,EAAAA,cAACkC,EAAO,CACNzC,IAAKkC,EAAIT,KAAKiB,gBAAgBC,MAAMC,IACpC3C,KAAMiB,EAAQgB,EAAIT,KAAKxB,MAAMA,KAC7BC,YAAagB,EAAQgB,EAAIT,KAAKxB,MAAMC,YACpCC,MAAOe,EAAQgB,EAAIT,KAAKxB,MAAME,eAQrC,C","sources":["webpack://talentan_gatsby_blog/./src/components/TagCard/tags.module.less","webpack://talentan_gatsby_blog/./src/components/TagCard/index.jsx","webpack://talentan_gatsby_blog/./src/pages/tags/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var pd20px = \"tags-module--pd20px--2c22e\";\nexport var tagCard = \"tags-module--tagCard--261a2\";\nexport var tagImg = \"tags-module--tagImg--35d30\";","import React from 'react';\nimport { Link } from 'gatsby';\nimport Config from '../../../config';\nimport Utils from '../../utils/pageUtils';\nimport * as style from './tags.module.less';\n\nconst TagCard = props => {\n  const { img, name, description, color } = props;\n  const tagPage = Config.pages.tag;\n\n  return (\n    <Link\n      className={style.tagCard}\n      to={Utils.resolvePageUrl(\n        tagPage,\n        name === '聪明人的个人成长' ? 'Personal Development for Smart People' : name\n      )}\n    >\n      <div className={style.tagCard}>\n        <div\n          className={style.tagImg}\n          style={{\n            backgroundImage: `url(${img})`,\n          }}\n        />\n        <div className={style.pd20px}>\n          <div className=\"textCenter\">\n            <h3 style={{ color }}>#{name}</h3>\n          </div>\n          <p>{description}</p>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nexport default TagCard;\n","import React from 'react';\nimport { Layout, Row, Col } from 'antd';\nimport { graphql } from 'gatsby';\nimport Header from '../../components/PageLayout/Header';\nimport SEO from '../../components/Seo';\nimport SidebarWrapper from '../../components/PageLayout/Sidebar';\nimport TagCard from '../../components/TagCard';\nimport Config from '../../../config';\n\nconst Tags = ({ data }) => {\n  const {\n    allFile: { edges },\n  } = data;\n  const tagData = Config.tags;\n  // 排序\n  const _edges = Object.keys(tagData).map(tag => {\n    return edges.find(e => e.node.name === tag);\n  });\n  return (\n    <Layout className=\"outerPadding\">\n      <Layout className=\"container\">\n        <Header />\n        <SEO title=\"标签\" description=\"追谏博客标签分类\" path=\"tags\" />\n        <SidebarWrapper>\n          <>\n            <div className=\"marginTopTitle\">\n              <h1 className=\"titleSeparate\">#标签</h1>\n            </div>\n            <Row gutter={[30, 20]}>\n              {_edges.map(val => (\n                <Col key={val.node.name} xs={24} sm={24} md={12} lg={8}>\n                  <TagCard\n                    img={val.node.childImageSharp.fluid.src}\n                    name={tagData[val.node.name].name}\n                    description={tagData[val.node.name].description}\n                    color={tagData[val.node.name].color}\n                  />\n                </Col>\n              ))}\n            </Row>\n          </>\n        </SidebarWrapper>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  {\n    allMarkdownRemark(filter: { fileAbsolutePath: { regex: \"/index.md$/\" } }) {\n      edges {\n        node {\n          frontmatter {\n            tags\n          }\n        }\n      }\n    }\n    allFile(filter: { relativeDirectory: { eq: \"tags\" } }) {\n      edges {\n        node {\n          name\n          childImageSharp {\n            fluid(maxWidth: 400) {\n              ...GatsbyImageSharpFluid_tracedSVG\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default Tags;\n"],"names":["tagCard","props","img","name","description","color","tagPage","Config","tag","React","Link","className","style","to","Utils","backgroundImage","Tags","data","allFile","edges","tagData","_edges","Object","keys","map","find","e","node","_Layout","Header","SEO","title","path","SidebarWrapper","_Row","gutter","val","_Col","key","xs","sm","md","lg","TagCard","childImageSharp","fluid","src"],"sourceRoot":""}